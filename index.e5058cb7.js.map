{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EAAW,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EADA,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EACrB,GAAG,CAAC,SAAC,CAA3B,EAAoC,MAAA,CAAC,EAAK,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,G,GAEhE,EAAQ,EAAS,MAAM,CAAC,SAAC,CAAA,CAAK,CAApC,EAA6C,OAAA,EAAM,CAAM,EAAA,GACnD,EAAU,EAAQ,EAAS,MAAM,AAEvC,CAAA,SAAS,aAAa,CAAC,2BAA2B,WAAW,CAC3D,EAAQ,cAAc,CAAC,SAEzB,SAAS,aAAa,CAAC,yBAAyB,WAAW,CACzD,EAAM,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar data = _to_consumable_array(document.querySelectorAll(\"span.population\"));\nvar allRigth = data.map(function(text) {\n    return +text.textContent.split(\",\").join(\"\");\n});\nvar total = allRigth.reduce(function(sum, elem) {\n    return sum + elem;\n}, 0);\nvar average = total / allRigth.length;\ndocument.querySelector(\"span.average-population\").textContent = average.toLocaleString(\"en-US\");\ndocument.querySelector(\"span.total-population\").textContent = total.toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.e5058cb7.js.map\n","'use strict';\n\nconst data = [...document.querySelectorAll('span.population')];\nconst allRigth = data.map((text) => +text.textContent.split(',').join(''));\n\nconst total = allRigth.reduce((sum, elem) => sum + elem, 0);\nconst average = total / allRigth.length;\n\ndocument.querySelector('span.average-population').textContent =\n  average.toLocaleString('en-US');\n\ndocument.querySelector('span.total-population').textContent =\n  total.toLocaleString('en-US');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","allRigth","data","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","text","textContent","split","join","total","reduce","sum","elem","average","querySelector","toLocaleString"],"version":3,"file":"index.e5058cb7.js.map"}